##! should i add the self-preservation part to the api gateway as well or als to all the other microservices
#
##server.port=8081
#
#
#
#
##This sets the name of your application. Eureka will use this name to register your service. In this case, your API Gateway will be registered with the name api-gateway.
#spring.application.name=apiGateway
##This specifies the URL of the Eureka server where your application will register itself. Replace <EUREKA_SERVER_HOST> and <EUREKA_SERVER_PORT> with the actual host and port of your Eureka server.
#
#
#
#
#
##This property indicates whether your application should register itself with the Eureka server. Setting this to true means your API Gateway will be registered as a service in Eureka.
#eureka.client.register-with-eureka=true
##This property indicates whether your application should fetch the registry information from the Eureka server. Setting this to true means your API Gateway will be able to discover other services registered with Eureka.
#eureka.client.fetch-registry=true
#
#eureka.client.serviceUrl.defaultZone=https://eurokaserver-production.up.railway.app/eureka
##eureka.client.tls.enabled=false
##eureka.client.serviceUrl.defaultZone=https://10.250.21.229/eureka
#
#logging.level.org.springframework.cloud.gateway=DEBUG
#logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#logging.level.com.netflix.discovery=DEBUG
#logging.level.io.netty=DEBUG
#
#
##spring.cloud.gateway.httpclient.connect-timeout=2000
##spring.cloud.gateway.httpclient.response-timeout=5s
#
##TODO : Configure api gateway routes here
#
## Set the default zone for service URLs
##eureka.instance.secure-port-enabled=true
##eureka.instance.non-secure-port-enabled=false
##eureka.instance.secure-port=443
#
#
##spring cloud gateway routes
#
##eureka.instance.preferIpAddress=true
###eureka.instance.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}
##
##
##spring.cloud.gateway.httpclient.connect-timeout=5000
##spring.cloud.gateway.httpclient.response-timeout=10s
#
#
#spring.cloud.gateway.routes[0].id=auth-service
#spring.cloud.gateway.routes[0].uri=lb://fypUniversity
##https://fyp-universtiy-production.up.railway.app
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/auth/**
#
##logging.level.org.springframework.cloud.gateway=DEBUG
##logging.level.org.springframework.web.reactive.function.client=DEBUG



spring.application.name=apiGateway

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=https://eurokaserver-production.up.railway.app/eureka

logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.cloud.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.io.netty=DEBUG

eureka.instance.preferIpAddress=true
eureka.instance.instanceId=${spring.application.name}:${random.uuid}

spring.cloud.gateway.httpclient.connect-timeout=10000
spring.cloud.gateway.httpclient.response-timeout=20s

spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=https://fyp-universtiy-production.up.railway.app
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/auth/**

spring.cloud.gateway.routes[1].id=auth-service
spring.cloud.gateway.routes[1].uri=https://fyp-universtiy-production.up.railway.app
spring.cloud.gateway.routes[1].predicates[1]=Path=/UserData/**



















eureka.client.registry-fetch-interval-seconds=30
eureka.client.initial-instance-info-replication-interval-seconds=30
eureka.client.instance-info-replication-interval-seconds=30
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90